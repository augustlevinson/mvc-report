{% extends "base.html.twig" %}

{% block title %}Report{% endblock %}

{% block body %}
<div class="main">
    <h1>Report</h1>
    <section id="kmom01">
        <a href="#kmom01"><h2>kmom01</h2></a>
        <h3>
            Berätta kort om dina förkunskaper och tidigare erfarenheter kring objektorientering.
        </h3>
        <p>
            Första introduktionen till objektorientering fick jag i javascriptkursen. Där snuddades det dock bara vid i förbifarten. I den nyss avslutade kursen oopython jobbade vi desto mer objektorienterat. Där dök vi ner i några olika datastrukturer och det blev snabbt tydligt att objektorienterad programmering är kraftfullt. Inkapslingen av funktioner och variabler skyddar dem från obehörig och oönskad manipulation. Dessutom blir det enklare att uppnå kod som följer DRY-principen, då återkommande funktionalitet kan utgöra egna objekt som kan användas på flera ställen.
        </p>
        <h3>
            Berätta kort om PHPs modell för klasser och objekt. Vilka är de grunder man behöver veta/förstå för att kunna komma igång och skapa sina första klasser?
        </h3>
        <p>
            En klass är som en mall som man kan skapa objekt utifrån. Klassen definieras med olika variabler och metoder som är specifika för objekt av just den klassen. När man skapar ett objekt av en viss klass kallas det att man instansierar ett objekt av klassen. Istället för att jobba med publika variabler och metoder jobbar man mot objekt genom ett så kallat API, där man anropar objektets metoder och variabler. Detta avgränsar hur olika användare och program får jobba mot objektets innehåll.
        </p>
        <h3>
            Reflektera kort över den kodbas, koden, strukturen som användes till uppgiften me/report, hur uppfattar du den?
        </h3>
        <p>
            Jag tycker mappstrukturen känns väldigt stor för de projekt vi ska utföra, men samtidigt är det väl mer och mer så man bygger appar. Ju större app desto fler filer behövs och desto viktigare blir det med en bra struktur på dem. Så bra att vi vänjer oss vid det och skapar goda vanor. Ofta hjälper dessutom en pakethanterare som Composer eller NPM oss att sätta grunden för strukturen, så jättekrångligt är det nog inte ändå.
        </p>
        <h3>
            Med tanke på artikeln “PHP The Right Way”, vilka delar in den finner du extra intressanta och värdefulla? Är det några särskilda områden som du känner att du vill veta mer om?
        </h3>
        <p>
            Jag prioriterade kapitel 4, Language Highlights. Där fick jag en snabb liten genomgång av språket och dess olika paradigmer, såsom objektorienterad och funktionell programmering och skillnaderna däremellan. Kapitlet länkar också en hel del till php.net för fördjupning om olika delar. Det känns som läsning som kan behöva återkommas till under kursen. Mer specifikt skulle jag gärna läsa på mer kring <a href="https://www.php.net/language.oop5">klasser och objekt</a>.
        </p>
        <h3>TIL: Objekt och klasser fungerar hittills väldigt liknande i flera språk, även om syntaxen fungerar lite olika.</h3>
    </section>
    <section id="kmom02">
        <a href="#kmom02"><h2>kmom02</h2></a>
        <p>
            Report text here.
        </p>
    </section>
    <section id="kmom03">
        <a href="#kmom03"><h2>kmom03</h2></a>
        <p>
            Report text here.
        </p>
    </section>
    <section id="kmom04">
        <a href="#kmom04"><h2>kmom04</h2></a>
        <p>
            Report text here.
        </p>
    </section>
    <section id="kmom05">
        <a href="#kmom05"><h2>kmom05</h2></a>
        <p>
            Report text here.
        </p>
    </section>
    <section id="kmom06">
        <a href="#kmom06"><h2>kmom06</h2></a>
        <p>
            Report text here.
        </p>
    </section>
    
</div>
{% endblock %}